int coinChange_01(vector<int> &arr, int idx, int target, string ans)
{
    if (idx == arr.size() || target == 0)
    {
        if (target == 0)
        {
            cout << ans << endl;
            return 1;
        }
        return 0;
    }

    int count = 0;
    for (int i = idx; i < arr.size(); i++)
    {
        if (target - arr[i] >= 0)
            count += coinChange_01(arr, i, target - arr[i], ans + to_string(arr[i]) + " ");
    }

    return count;
}

int coinChange_02(vector<int> &arr, int idx, int target, string ans)
{
    if (idx == arr.size() || target == 0)
    {
        if (target == 0)
        {
            cout << ans << endl;
            return 1;
        }
        return 0;
    }

    int count = 0;
    for (int i = idx; i < arr.size(); i++)
    {
        if (target - arr[i] >= 0)
            count += coinChange_02(arr, i + 1, target - arr[i], ans + to_string(arr[i]) + " ");
    }

    return count;
}

int coinChange_04(vector<int> &arr, int idx, int target, string ans)
{
    if (idx == arr.size() || target == 0)
    {
        if (target == 0)
        {
            cout << ans << endl;
            return 1;
        }
        return 0;
    }

    int count = 0;
    if (target - arr[idx] >= 0)
        count += coinChange_04(arr, idx + 1, target - arr[idx], ans + to_string(arr[idx]) + " ");
    count += coinChange_04(arr, idx + 1, target, ans);

    return count;
}

int coinChange_03(vector<int> &arr, int idx, int target, string ans)
{
    if (idx == arr.size() || target == 0)
    {
        if (target == 0)
        {
            cout << ans << endl;
            return 1;
        }
        return 0;
    }

    int count = 0;
    if (target - arr[idx] >= 0)
        count += coinChange_03(arr, idx, target - arr[idx], ans + to_string(arr[idx]) + " ");
    count += coinChange_03(arr, idx + 1, target, ans);

    return count;
}